// Code generated by moshi-kotlin-codegen. Do not edit.
package com.example.android.devbyteviewer.network

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonDataException
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.String
import kotlin.collections.List

class NetworkVideoContainerJsonAdapter(moshi: Moshi) : JsonAdapter<NetworkVideoContainer>() {
    private val options: JsonReader.Options = JsonReader.Options.of("videos")

    private val listOfNetworkVideoAdapter: JsonAdapter<List<NetworkVideo>> =
            moshi.adapter<List<NetworkVideo>>(Types.newParameterizedType(List::class.java, NetworkVideo::class.java)).nonNull()

    override fun toString(): String = "GeneratedJsonAdapter(NetworkVideoContainer)"

    override fun fromJson(reader: JsonReader): NetworkVideoContainer {
        var videos: List<NetworkVideo>? = null
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 -> videos = listOfNetworkVideoAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'videos' was null at ${reader.path}")
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = NetworkVideoContainer(
                videos = videos ?: throw JsonDataException("Required property 'videos' missing at ${reader.path}"))
        return result
    }

    override fun toJson(writer: JsonWriter, value: NetworkVideoContainer?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("videos")
        listOfNetworkVideoAdapter.toJson(writer, value.videos)
        writer.endObject()
    }
}
